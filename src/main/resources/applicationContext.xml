<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	>
	<import resource="spring.activiti.cfg.xml" />
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="com.tianranmei"></context:component-scan>
	
	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />
	
	
	<!-- 配置 C3P0 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="dataSourceName" value="dataSource" />
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="root" />
		<property name="password" value="root" />
		<property name="maxPoolSize" value="15" />
		<property name="minPoolSize" value="1" />
		<property name="initialPoolSize" value="2" />
		<property name="acquireIncrement" value="3" />
		<property name="maxIdleTime" value="10" />
	</bean>



	<!-- 配置 SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		<property name="mappingLocations" value="classpath:com/tianranmei/po/*.hbm.xml"></property>
	</bean>

	<!-- 配置 Spring 的声明式事务 -->
	<!-- 1. 配置 hibernate 的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置activiti流程引擎 -->
	<!-- <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
	</bean>
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">  
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />  
    </bean> -->  
    
	<!-- 2. 配置事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="lastNameIsValid" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 3. 配置事务切入点, 再把事务属性和事务切入点关联起来 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.tianranmei.service.*.*(..))"
			id="txPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	
	<!-- 这个是用activiti5几个主要的接口 -->  
    <!-- <bean id="repositoryService" factory-bean="processEngine"  
        factory-method="getRepositoryService" />  
    <bean id="runtimeService" factory-bean="processEngine"  
        factory-method="getRuntimeService" />  
    <bean id="taskService" factory-bean="processEngine"  
        factory-method="getTaskService" />  
    <bean id="historyService" factory-bean="processEngine"  
        factory-method="getHistoryService" />  
    <bean id="managementService" factory-bean="processEngine"  
        factory-method="getManagementService" />  
    <bean id="identityService" factory-bean="processEngine"  
        factory-method="getIdentityService" />  -->

	<bean name="userAction" class="com.tianranmei.action.UsersAction">
	</bean>
	<bean name="memberService" class="com.tianranmei.service.impl.MemberServiceImpl"></bean>
	<bean name="memberDao" class="com.tianranmei.dao.impl.MemberDaoImpl"></bean>
</beans>